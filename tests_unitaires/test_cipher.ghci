-- Test de toBlock
putStrLn "=== Test toBlock ==="
toBlock "32 ae f4" == [Pol [Z2Z 0,Z2Z 1,Z2Z 0,Z2Z 0,Z2Z 1,Z2Z 1],Pol [Z2Z 0,Z2Z 1,Z2Z 1,Z2Z 1,Z2Z 0,Z2Z 1,Z2Z 0,Z2Z 1],Pol [Z2Z 0,Z2Z 0,Z2Z 1,Z2Z 0,Z2Z 1,Z2Z 1,Z2Z 1,Z2Z 1]]

-- Test de addRoundKey
-- Les tests suivants sont basés sur l'annexe B du document FIPS-197 (p37)
-- à partir de l'input jusqu'à la 1ère ligne (avant le 2ème addRoundKey donc)
input_appendixB = toBlock "32 43 f6 a8 88 5a 30 8d 31 31 98 a2 e0 37 07 34"
cipher_key = toBlock "2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c"
res_aRK = toBlock "19 3d e3 be a0 f4 e2 2b 9a c6 8d 2a e9 f8 48 08"
putStrLn "=== Test addRoundKey ==="
addRoundKey input_appendixB cipher_key == res_aRK

-- Test de subBytes
res_sB = toBlock "d4 27 11 ae e0 bf 98 f1 b8 b4 5d e5 1e 41 52 30"
putStrLn "=== Test subBytes ==="
subBytes res_aRK == res_sB

-- Test de shiftRows
res_sR = toBlock "d4 bf 5d 30 e0 b4 52 ae b8 41 11 f1 1e 27 98 e5"
putStrLn "=== Test shiftRows ==="
shiftRows res_sB == res_sR

-- Test de mixColumns
res_mC = toBlock "04 66 81 e5 e0 cb 19 9a 48 f8 d3 7a 28 06 26 4c"
putStrLn "=== Test mixColumns ==="
mixColumns res_sR == res_mC 